name: Kernel CI

# Controls when the action will run.
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches:
      # TODO: Get rid of this, only run upon pull requests
      - 71r1-github-actions
  pull_request:
    branches:
      - aosp/LA.UM.7.1.r1

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  # https://docs.github.com/en/actions/reference/workflow-syntax-for-github-actions#jobsjob_idcontainer

  ### Jobs ###
  kernel:
    strategy:
      fail-fast: false # Do not stop build if one matrix strand fails
      matrix:
        device:
          #- akari
          - apollo
          #- akatsuki
    runs-on: ubuntu-20.04
    container:
      image: ghcr.io/ix5/kernel-base
    env:
      GIT_CLONE: "git clone --single-branch --depth=1"
      REMOTE: "https://github.com/sonyxperiadev"
      BASEDIR: "/srv/android"
      KERNEL_VERSION: "4.14"
      KERNEL_BASE_BRANCH: "aosp/LA.UM.7.1.r1"
      KERNEL_BASEDIR: "/srv/android/kernel/sony/msm-4.14"
      ANDROID_BUILD_TOP: "/srv/android"

    ### Steps ###
    steps:

      - uses: actions/cache@v2
        id: cache_kernel_repo
        name: Cache/Restore kernel source repo
        with:
          path: |
            $KERNEL_BASEDIR/kernel
            !$KERNEL_BASEDIR/kernel/techpack/audio
            !$KERNEL_BASEDIR/kernel/techpack/data-kernel
            !$KERNEL_BASEDIR/kernel/arch/arm64/configs/sony
            !$KERNEL_BASEDIR/kernel/drivers/staging/wlan-qc/fw-api
            !$KERNEL_BASEDIR/kernel/drivers/staging/wlan-qc/qca-wifi-host-cmn
            !$KERNEL_BASEDIR/kernel/drivers/staging/wlan-qc/qcacld-3.0
          key: kernel-source-${{ env.KERNEL_VERSION }}-${{ github.sha }}
          restore-keys: |
            kernel-source-${{ env.KERNEL_VERSION }}-sha-

      - uses: actions/cache@v2
        id: cache_repos
        name: Cache/Restore kernel sub-repos
        with:
          path: |
            $KERNEL_BASEDIR/kernel/techpack/audio
            $KERNEL_BASEDIR/kernel/techpack/data-kernel
            $KERNEL_BASEDIR/kernel/arch/arm64/configs/sony
            $KERNEL_BASEDIR/kernel/drivers/staging/wlan-qc/fw-api
            $KERNEL_BASEDIR/kernel/drivers/staging/wlan-qc/qca-wifi-host-cmn
            $KERNEL_BASEDIR/kernel/drivers/staging/wlan-qc/qcacld-3.0
          key: kernel-repos-${{ env.KERNEL_VERSION }}-${{ github.sha }}
          restore-keys: |
            kernel-repos-${{ env.KERNEL_VERSION }}-sha-

      - uses: actions/cache@v2
        id: cache_kernel_tmp
        name: Cache/Restore kernel tmp
        with:
          path: |
            ${{ env.BASEDIR }}/out/kernel-${{ env.KERNEL_VERSION }}/clang
          key: kernel-tmp-${{ env.KERNEL_VERSION }}-sha-${{ github.sha }}
          restore-keys: |
            kernel-tmp-${{ env.KERNEL_VERSION }}-sha-

      - name: Clone kernel repo
        if: steps.cache_kernel_repo.outputs.cache-hit != 'true'
        continue-on-error: true
        run: |
          mkdir -p $KERNEL_BASEDIR/
          # First, checkout base branch (since refs/* not available for clone directly)
          # > warning: Could not find remote branch refs/heads/71r1-github-actions to clone.
          # > fatal: Remote branch refs/heads/71r1-github-actions not found in upstream origin
          $GIT_CLONE https://github.com/${{ github.repository }} $KERNEL_BASEDIR/kernel -b $KERNEL_BASE_BRANCH
          git fetch origin ${{ github.ref }}
          git checkout remotes/origin/${{ github.ref }}
          #$GIT_RESET origin/$(echo ${{ github.ref }} | sed 's|refs/heads/||')

      - name: ls restored kernel dirs and fail
        continue-on-error: true
        run: |
          ls -la $BASEDIR/out/ || /bin/true
          ls -la $BASEDIR/out/kernel-$KERNEL_VERSION/ || /bin/true
          ls -la $BASEDIR/out/kernel-$KERNEL_VERSION/clang || /bin/true
          ls -la $KERNEL_BASEDIR || /bin/true
          ls -la $KERNEL_BASEDIR/kernel || /bin/true
          ( cd $KERNEL_BASEDIR/kernel && git status && git remote -vvv ) || /bin/true

      - name: Clone repos
        if: steps.cache_repos.outputs.cache-hit != 'true'
        continue-on-error: true
        run: |
          mkdir -p $KERNEL_BASEDIR/
          # Need to remove existing dir
          rm -rf $GITHUB_WORKSPACE/kernel/techpack/audio
          $GIT_CLONE $REMOTE/kernel-techpack-audio $KERNEL_BASEDIR/kernel/techpack/audio -b $KERNEL_BASE_BRANCH
          $GIT_CLONE $REMOTE/kernel-techpack-data-kernel $KERNEL_BASEDIR/kernel/techpack/data-kernel -b $KERNEL_BASE_BRANCH
          $GIT_CLONE $REMOTE/kernel-defconfig $KERNEL_BASEDIR/kernel/arch/arm64/configs/sony -b $KERNEL_BASE_BRANCH
          $GIT_CLONE $REMOTE/vendor-qcom-opensource-wlan-fw-api $KERNEL_BASEDIR/kernel/drivers/staging/wlan-qc/fw-api -b aosp/LA.UM.8.1.r1
          $GIT_CLONE $REMOTE/vendor-qcom-opensource-wlan-qca-wifi-host-cmn $KERNEL_BASEDIR/kernel/drivers/staging/wlan-qc/qca-wifi-host-cmn -b aosp/LA.UM.8.1.r1
          $GIT_CLONE $REMOTE/vendor-qcom-opensource-wlan-qcacld-3.0 $KERNEL_BASEDIR/kernel/drivers/staging/wlan-qc/qcacld-3.0 -b aosp/LA.UM.8.1.r1

      - name: Clone out-of-tree scripts
        run: git clone https://github.com/ix5/oot $BASEDIR/oot -b shared-tmp

      - name: Reset kernel to ref of this run
        if: steps.cache_kernel_repo.outputs.cache-hit == 'true'
        continue-on-error: true
        env:
          GIT_FETCH: "git fetch origin"
          GIT_RESET: "git reset --hard"
        run: |
          cd $KERNEL_BASEDIR/kernel
          $GIT_FETCH ${{ github.ref }}
          $GIT_RESET origin/$(echo ${{ github.ref }} | sed 's|refs/heads/||')
        shell: bash

      - name: FAIL
        run: /bin/false

      - name: Pull latest for repos
        if: steps.cache_repos.outputs.cache-hit == 'true'
        continue-on-error: true
        env:
          GIT_FETCH: "git fetch origin"
          GIT_RESET: "git reset --hard"
        run: |
          cd $KERNEL_BASEDIR/kernel/techpack/audio && $GIT_FETCH $KERNEL_BASE_BRANCH && $GIT_RESET origin/$KERNEL_BASE_BRANCH
          cd $KERNEL_BASEDIR/kernel/techpack/data-kernel && $GIT_FETCH $KERNEL_BASE_BRANCH && $GIT_RESET origin/$KERNEL_BASE_BRANCH
          cd $KERNEL_BASEDIR/kernel/arch/arm64/configs/sony && $GIT_FETCH $KERNEL_BASE_BRANCH && $GIT_RESET origin/$KERNEL_BASE_BRANCH
          cd $KERNEL_BASEDIR/kernel/drivers/staging/wlan-qc/fw-api && $GIT_FETCH aosp/LA.UM.8.1.r1 && $GIT_RESET origin/aosp/LA.UM.8.1.r1
          cd $KERNEL_BASEDIR/kernel/drivers/staging/wlan-qc/qca-wifi-host-cmn && $GIT_FETCH aosp/LA.UM.8.1.r1 && $GIT_RESET origin/aosp/LA.UM.8.1.r1
          cd $KERNEL_BASEDIR/kernel/drivers/staging/wlan-qc/qcacld-3.0 && $GIT_FETCH aosp/LA.UM.8.1.r1 && $GIT_RESET origin/aosp/LA.UM.8.1.r1

      - name: Clone ramdisk images
        # sodp-ramdisks contains following structure:
        # | sodp-ramdisks (as "product")
        # |-- apollo
        #     |-- ramdisk.img
        #     | - ramdisk-recovery.img
        run: |
          mkdir -p $BASEDIR/out/target
          rm -rf $BASEDIR/out/target/product
          git clone https://github.com/ix5/sodp-ramdisks -b aosp-10 $BASEDIR/out/target/product

      #- name: Copy checked out repo to /srv/android
      #  # Using copy instead of move so that cache hits on $GITHUB_WORKSPACE/kernel can occur
      #  run: cp -r $GITHUB_WORKSPACE/kernel/ $KERNEL_BASEDIR/kernel

      # TEMP until image is rebuilt
      #- name: TEMP Install python
      #  run: apt install -y python

      - name: Run kernel CI script
        continue-on-error: true
        run: |
            cd /srv/android/oot/
            /srv/android/oot/oot.sh -s ${{ matrix.device }}
        shell: bash

      - name: Archive kernel images
        uses: actions/upload-artifact@v2
        with:
          name: boot-image-${{ matrix.device }}
          path: /srv/android/oot/${{ matrix.device }}-boot.img

      - name: Archive dtbos
        uses: actions/upload-artifact@v2
        with:
          name: kernel-dtbo.img-${{ matrix.device }}
          path: /srv/android/oot/${{ matrix.device }}-dtbo.img

